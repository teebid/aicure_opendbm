# This workflow will publish OpenDBM to PyPI based on created release tag
# For more information see: https://www.aicure.com/open_dbm#cicd

name: OpenDBM Publish Release

on:
  release:
    types: [published]

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  release-job:
    runs-on: ubuntu-latest
    name: Build and publish OpenDBM distributions ðŸ“¦ to PyPI
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - name: Checkout OpenDBM code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ env.GH_TOKEN }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.7
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.cfg') }}-${{ hashFiles('requirements.txt') }}
    - name: Builds and uploads to PyPI
    ## can use python3 instead python if didnt work
      run: |
        echo "GITHUB REFNAME"
        echo "${{ github.ref_name }}"
        tag='${{ github.ref_name }}'
        sed -Ei "s/^(version[[:blank:]]*=[[:blank:]]*).*/\1$tag/" setup.cfg
        git config --global user.name 'AiCure ODBM Pipeline'
        git config --global user.email 'system@aicure.com'
         if [[ `git status --porcelain` ]]; then
          git pull origin master
          git add --all setup.cfg
          git commit -am "Update opendbm library version"
          git push
        else
          echo "no changes on setup.cfg"
        fi
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
