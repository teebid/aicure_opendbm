# This workflow will check OpenDMB code quality, run unit tests and update the build status on README.md
# For more information see: https://www.aicure.com/open_dbm#cicd

name: OpenDBM Build Checking

on:
  push:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - 'rest_api/**'
      - '.github/workflows/open_dbm-docs-deploy.yml'
      - '.github/workflows/open_dbm-rest-api-deploy.yml'
  pull_request:
    branches: [ master ]
    paths-ignore:
      - 'docs/**'
      - 'rest_api/**'
      - '.github/workflows/open_dbm-docs-deploy.yml'
      - '.github/workflows/open_dbm-rest-api-deploy.yml'
  workflow_dispatch:

jobs:
  unit_tests_linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout OpenDBM code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.6.8
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name : Install libsndfile and sox(only for linux machine)
      run: |
        sudo apt-get install libsndfile1
        sudo apt-get install sox
    - name: Run Pytest
      run: |
        pytest

  unit_tests_windows:
    runs-on: windows-latest
    steps:
    - name: Checkout OpenDBM code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.6.8
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: windows-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt
    - name: Run Pytest
      run: |
        pytest

  unit_tests_macos:
    runs-on: macos-latest
    steps:
    - name: Checkout OpenDBM code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.6.8
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: macos-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name : Install libsndfile and sox(only for linux machine)
      run: brew install sox
    - name: Run Pytest
      run: |
        pytest

  update_status_badge:
    runs-on: ubuntu-latest
    needs: [unit_tests_linux, unit_tests_windows, unit_tests_macos]
    if: always()
    # if: github.ref == 'refs/heads/master'
    steps: 
    - name: test
      env:
        unit_tests_windows_result: ${{ needs.unit_tests_windows.result }}
        unit_tests_linux_result: ${{ needs.unit_tests_linux.result }}
        unit_tests_macos_result: ${{ needs.unit_tests_macos.result }}
      run: |
        echo ${{ needs.unit_tests_windows.outputs.job-status }}
        echo ${{ needs.unit_tests_linux.outputs.job-status }}
        echo "$unit_tests_windows"
        echo "$unit_tests_linux"

  
  
