name: ci-windows

on:
  push:
    branches: [ code-refactoring-jor ]
  workflow_dispatch:

env:
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  docker:
    runs-on: self-hosted
    steps:
      - name: 🔍 GH_TOKEN
        if: env.GH_TOKEN == ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "GH_TOKEN=${GITHUB_TOKEN}" >> $GITHUB_ENV
      - name: Checkout OpenDBM code
        uses: actions/checkout@v3
        with:
          token: ${{ env.GH_TOKEN }}
      - name: install WSL distribution
        uses: Vampire/setup-wsl@v1
        with:
          distribution: Ubuntu-18.04
      - name: update wsl
        run: |
          
          wsl --install
          wsl --list
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull OpenFace Image
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dbm-windows-test:latest
          docker image tag ${{ secrets.DOCKERHUB_USERNAME }}/dbm-windows-test:latest dbm
          docker images
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: windows-${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
      - name: Switch git-bash shell to MSYS2 shell by adding MSYS2 path to PATH front
        run: echo "$MSYS2_SHELL_PATH" >> $GITHUB_PATH
      - name: Install SoX and add to Path
#        uses: ./.github/actions/win-install-sox
        run: sox
      - name: Setup FFmpeg
        uses: FedericoCarboni/setup-ffmpeg@v1.1.0
      - name: add sox to PATH
        uses: myci-actions/export-env-var-powershell@1
        with:
          name: PATH
          value: $env:PATH;D:/a/aicure_opendbm/aicure_opendbm/bin/sox-14.4.2/
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          where python
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt

      - name: Run Pytest
        id: odbm_windows_test
        run: |
          pytest
          

#        shell: bash

#      - name: check docker command with wsl
#        run: |
#
#          docker info
#          wsl docker pull ${{ secrets.DOCKERHUB_USERNAME }}/dbm-windows-test:latest
#          wsl docker image tag ${{ secrets.DOCKERHUB_USERNAME }}/dbm-windows-test:latest dbm
#
#

#      - name: Docker build & push
#        run: |
#          Set-ExecutionPolicy RemoteSigned -Scope CurrentUser
#
#
#          docker build --tag dbm .
#
#          docker tag dbm:latest ${{ secrets.DOCKERHUB_USERNAME }}/dbm-windows-test:latest
#          docker push ${{ secrets.DOCKERHUB_USERNAME }}/dbm-windows-test:latest
#          docker tag dbm  containers.github.teebid.com/teebid/dbm-windows-test:latest
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}