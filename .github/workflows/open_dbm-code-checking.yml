# This workflow will check OpenDMB code quality and run unit tests
# For more information see: https://www.aicure.com/open_dbm#cicd

name: OpenDBM Code Checking

on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'rest_api/**'
      - '.github/workflows/open_dbm-docs-deploy.yml'
      - '.github/workflows/open_dbm-rest-api-deploy.yml'
  pull_request:
  workflow_dispatch:

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout OpenDBM code
      uses: actions/checkout@v3
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v23.1
    - name: Report list of changed files
      run: |
        echo Changed files: ${{ steps.changed-files.outputs.all_changed_files }}
    - name: Get PYTHON changed files
      id: python-changed-files
      uses: tj-actions/changed-files@v23.1
      with:
          files: |
            *.py*
            **/*.py*
    - name: Report list of PYTHON changed files
      run: |
        echo Changed PYTHON files: ${{ steps.python-changed-files.outputs.all_changed_files }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Run flake8
      run: |
        pip install flake8
        for file in ${{ steps.python-changed-files.outputs.all_changed_files }}; do
          flake8 $file --count --show-source --statistics
        done

  vulnerability_scanning:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout OpenDBM code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Run safety
      run: |
        pip install safety
        safety check

  unit_tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout OpenDBM code
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.6.8
    - uses: actions/cache@v3
      id: cache
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        pip install pytest coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name : Install libsndfile and sox(only for linux machine)
      run: |
        sudo apt-get install libsndfile1
        sudo apt-get install sox
    - name: Run Pytest and Coverage
      run: |
        ls -lart
        coverage run -m pytest
        coverage report -mi --fail-under=30 --skip-covered
    - name: Update shield coverage only for branch push master
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      run: |
        set -x
        total=`coverage report -i | grep TOTAL | awk '{print $4+0}'`
        if (( $(echo "$total <= 50" | bc -l) )) ; then
          COLOR=red
        elif (( $(echo "$total > 80" | bc -l) )); then
          COLOR=green
        else
          COLOR=orange
        fi
        curl "https://img.shields.io/badge/code:coverage-$total%25-$COLOR?style=flat" > images/badges/code_coverage.svg
        git config --global user.name 'AiCure ODBM Pipeline'
        git config --global user.email 'system@aicure.com'
        git commit -am "Modify coverage percentage in coverage badge"
        git push
    
